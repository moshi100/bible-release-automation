name: Build and Deploy

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  APP_NAME: "Hebrew Bible Study"

jobs:
  build:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
              
      - name: Download Provisioning Profiles
        id: provisioning-profiles
        uses: apple-actions/download-provisioning-profiles@v1
        with: 
          bundle-id: 'com.ionicframework.biblecommentary'
          profile-type: 'IOS_APP_STORE'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
    
      - name: List provisioning profiles
        run: echo ${{ steps.provisioning-profiles.outputs.profiles }}

      - name: Import code signing certificate
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
      
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm install --force

      - name: Install ionic cli
        run: |
          npm install -g ionic

      # - name: Prepare ios platform
      #   run: ionic cordova prepare ios --no-interactive --confirm
      
      # - name: Build artifact
      #   env:
      #     CODE_SIGN_IDENTITY: “iPhone Developer”
      #     DEVELOPMENT_TEAM: "Moshe Cohen"
      #   run: |
      #     cd platforms/ios
      #     xcodebuild -workspace "$APP_NAME.xcworkspace" -scheme "$APP_NAME" -sdk iphoneos -configuration AppStoreDistribution archive -archivePath "build/$APP_NAME.xcarchive"
      
      # - name: Upload to TestFlight
      #   uses: Apple-Actions/upload-testflight-build@v1
      #   with:
      #     app-path: .build/Artifacts/Example-iOS.ipa/Example-iOS.ipa
      #     issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
      #     api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
      #     api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
